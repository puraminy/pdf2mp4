#!/bin/bash
last=100
start_page=1
end_page=100
delay=0.30
crf=20
video_name=""
concat=""
linger_inter=20
linger=0
progress=0
list=""
mode="read"
bg="true"
skip=1
negate=""
while [ $# -gt 0 ]; do

   if [[ $1 == *"--"* ]]; then
        param="${1/--/}"
        declare $param="$2"
        # echo $1 $2 // Optional to see the parameter:value result
   fi

  shift
done

arr=(${frames//_/ })
stride=${arr[3]}

echo "stride : $stride"
top_frames=($(ls -a "$frames"/*.png | head -2))
echo "frames : ${top_frames[@]}"
first_frame=$(basename ${top_frames[0]})
first_frame="${first_frame%.*}"
sec_frame=$(basename ${top_frames[1]})
sec_frame="${sec_frame%.*}"

echo "first_frame: $first_frame, sec_frame:$sec_frame"

arr=(${first_frame//_/ })
num1=${arr[3]}
num1=$((10#$num1))

arr=(${sec_frame//_/ })
num2=${arr[3]}
num2=$((10#$num2))

dist=$((num2 - num1))
echo "dist: $dist"
if [[ $mode = "read" ]]; then
	linger=0
	delay=$(($dist / 100)) | bc -l
	echo "delay: $delay"
else
	delay=0.12
	linger=10
	crf=25
	t=$(echo "1.0 / $dist" | bc -l)
	skip=$( echo "128*$t" | bc -l)
	skip=${skip%.*}
	#skip=1
	echo "Skip : $skip"
fi

if [[ $linger -gt 0 ]]; then
	crf=28
fi

if [[ $list != "" ]]; then
	video_name=$(basename "$list")
    video_name="$video_name"_"$start_page"_"$end_page".mp4
	video_dir="$video_name"
    video_file="$video_dir"/"$video_name"	
	if [[ "$video_dir" != "" ]] && [[ ! -d "$video_dir" ]]; then
		mkdir  "$video_dir"
	fi
	ffmpeg -f concat  -safe 0 -i "$list" -c:v libx264 -crf $crf -pix_fmt yuv420p "$video_file"  #> /dev/null 2>&1 < /dev/null &
	exit 1
fi


if [[ $frames = "" ]]; then
  echo "Usage: ./frames2mp4 --frames framesname"
  exit 1
fi

if [[ "$video_name" = "" ]]; then
	video_name=$(basename "$frames")
	video_name=${video_name/_frames/_video}
fi


if [[ "$video_dir" = "" ]]; then
	video_dir="$video_name"
fi


if [[ $remove = "video" ]] && [[ -d "$video_dir" ]]; then
  echo "Removing $video_dir"
  rm -r "$video_dir"
fi

if [[ "$video_dir" != "" ]] && [[ ! -d "$video_dir" ]]; then
	mkdir  "$video_dir"
fi


echo "Video dir is: $video_dir"

if [[ -d "$concat" ]]; then
	video_list="$concat"/vidlist.txt
	printf "file %s\nduration $delay\n" "$frames"/page_"$pnum"_*.png >> "$video_list"
	ffmpeg -f concat -safe 0 -i "$video_list" -c copy "$video_dir"/"$video_name".mp4
	exit 1
fi

all_framefile=list_"$video_name"_"$start_page"_"$end_page".txt

if [ -f "$all_framefile" ]; then
	rm "$all_framefile"
fi 

video_name="$mode"_"$video_name"_"$start_page"_"$end_page".mp4
video_file="$video_dir"/"$video_name"

echo "video file is $video_file"
echo "Please waite ..."

first_delay=5
# if [[ $end_page = 100 ]]; then
	# echo "all pages"
	# printf "file %s\nduration $first_delay\n" "$frames"/*01_0000.png > "$all_framefile"
	# printf "file %s\nduration $delay\n" "$frames"/*.png >> "$all_framefile"
# else
	# pnum=$(printf "%03d" $start_page)
	# printf "file %s\nduration $first_delay\n"  $(ls -a "$frames"/page_"$pnum"_*.png | head -1) > "$all_framefile"
	# for ((ii=$start_page; ii<$((end_page +1)); ii++)); do
	    # pnum=$(printf "%03d" $ii)
		# echo "Adding page $pnum"
		# printf "file %s\nduration $delay\n" "$frames"/page_"$pnum"_*.png >> "$all_framefile"
	# done
# fi

image_files=( "$frames"/page_*.png )
page_num=-1	
lint=$linger_inter
ling=$linger

q=0
for ((ii=0; ii<${#image_files[@]}; ii++)); do
	frame=${image_files[$ii]}
	filename="${frame##*/}"
	name=$(echo "$filename" | cut -f 1 -d '.')
	arr=(${name//_/ })
	num=${arr[1]}
	new_page=0

	num=$((10#$num))
	
	if [[ $num -ne $page_num ]]; then
		new_page=1
		q=0
	fi

	page_num=$num
	if [[ $num -lt $start_page ]]; then
		continue
	fi
		
	if [[ $num -gt $end_page ]]; then
		break
	fi
		
	if [[ $((ii%skip)) -ne 0 ]]; then
		continue
	fi
	
	if [[ $negate != "" ]]; then
		convert "$frame" -negate +repage "$frame"
	fi
	
	
	if [[ $ii -eq 0 ]]; then
		echo "file $frame" >> "$all_framefile"
		echo "duration 5" >> "$all_framefile"
	else 
	if [[ $linger != 0 ]]; then
		if [ $((q%lint)) -eq 0 ]; then			
			# if [[ $lint -lt $linger_inter ]]; then
				# lint=$((lint + 1))
			# fi
			# if [[ $ling -gt $linger ]]; then
				# ling=$((lint - 1))
			# fi			
			if [[ $progress = 0 ]]; then
				echo "file $frame" >> "$all_framefile"
				echo "duration $linger" >> "$all_framefile"
			else
				echo "lingering ... $num"
				cc=256
				filename=$(basename -- "$frame")
				filename="${filename%.*}"				
				while [[ $cc -gt 20 ]]; do					
					fname="$frames"/"temp_"$filename"_"$cc".png"
					convert $frame -fill "#0502" -draw "rectangle 10,10 40,$cc" $fname
					echo "file $fname" >> "$all_framefile"
					echo "duration 0.3" >> "$all_framefile"
					cc=$((cc-25))
				done
			fi
		else
			echo "file $frame" >> "$all_framefile"
			echo "duration 0.03" >> "$all_framefile"
		fi
	else
		echo "file $frame" >> "$all_framefile"
		echo "duration $delay" >> "$all_framefile"	
	fi
	fi
	q=$((q+1))
done

echo "Generating video ... Please wait $all_framefile"
if [ -f "$video_file" ]; then
  rm "$video_file"
fi
if [ -z ${bg+x} ]; then 
	ffmpeg -f concat  -safe 0 -i "$all_framefile" -c:v libx264 -crf $crf -pix_fmt yuv420p "$video_file"  #> /dev/null 2>&1 < /dev/null &
else
	ffmpeg -f concat  -safe 0 -i "$all_framefile" -c:v libx264 -crf $crf -pix_fmt yuv420p "$video_file"  > /dev/null 2>&1 < /dev/null &
	disown -a
	echo "Generating video is running in the background"
fi

#if [ -f "$all_framefile" ]; then
#	rm "$all_framefile"
#fi 
#echo "done!" >> "$video_dir"/"$video_name"_done.txt

#-map 0 -f segment -segment_time 120 "$video_file"_%03d.mp4   #> /dev/null 2>&1 < /dev/null


